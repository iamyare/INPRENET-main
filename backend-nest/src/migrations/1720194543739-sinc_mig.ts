import { MigrationInterface, QueryRunner } from "typeorm";

export class SincMig1720194543739 implements MigrationInterface {
    name = 'SincMig1720194543739'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "NET_DETALLE_DEDUCCION" ("ID_DED_DEDUCCION" number GENERATED BY DEFAULT AS IDENTITY, "MONTO_TOTAL" number(10,2), "MONTO_APLICADO" number(10,2), "ESTADO_APLICACION" varchar2(20) DEFAULT 'NO COBRADA', "ANIO" number, "MES" number, "FECHA_APLICADO" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, "ID_PERSONA" number, "ID_DETALLE_PAGO_BENEFICIO" number, "ID_DEDUCCION" number, CONSTRAINT "CK_ESTADO_DED" CHECK (estado_aplicacion IN ('COBRADA', 'NO COBRADA', 'EN PRELIMINAR', 'EN PLANILLA')), CONSTRAINT "PK_id_detD" PRIMARY KEY ("ID_DED_DEDUCCION"))`);
        await queryRunner.query(`CREATE TABLE "NET_SESION" ("ID_SESION" number GENERATED BY DEFAULT AS IDENTITY, "token" varchar2(255) NOT NULL, "fecha_creacion" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, "fecha_expiracion" timestamp, "estado" varchar2(20) DEFAULT 'activa' NOT NULL, "id_usuario_privada" number, "id_usuario" number, CONSTRAINT "FK_SESION_NET_SESION" PRIMARY KEY ("ID_SESION"))`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" ADD CONSTRAINT "FK_ID_PERSONA_DETDED" FOREIGN KEY ("ID_PERSONA") REFERENCES "NET_PERSONA" ("ID_PERSONA")`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" ADD CONSTRAINT "FK_ID_DETALLE_PAGO_BENEFICIO_DETDED" FOREIGN KEY ("ID_DETALLE_PAGO_BENEFICIO") REFERENCES "NET_DETALLE_PAGO_BENEFICIO" ("ID_BENEFICIO_PLANILLA")`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" ADD CONSTRAINT "FK_ID_DEDUCCION_DETDED" FOREIGN KEY ("ID_DEDUCCION") REFERENCES "NET_DEDUCCION" ("ID_DEDUCCION")`);
        await queryRunner.query(`ALTER TABLE "NET_MOVIMIENTO_CUENTA" ADD CONSTRAINT "FK_ID_TIPO_MOV_NET_MOV_CUEN" FOREIGN KEY ("ID_TIPO_MOVIMIENTO") REFERENCES "NET_TIPO_MOVIMIENTO" ("ID_TIPO_MOVIMIENTO")`);
        await queryRunner.query(`ALTER TABLE "NET_MOVIMIENTO_CUENTA" ADD CONSTRAINT "FK_NUM_CUENTA_NET_MOV_CUEN" FOREIGN KEY ("NUMERO_CUENTA") REFERENCES "NET_CUENTA_PERSONA" ("NUMERO_CUENTA")`);
        await queryRunner.query(`ALTER TABLE "NET_SESION" ADD CONSTRAINT "FK_ID_USUARIO_PRIV_NET_SESION" FOREIGN KEY ("id_usuario_privada") REFERENCES "NET_USUARIO_PRIVADA" ("ID_USUARIO")`);
        await queryRunner.query(`ALTER TABLE "NET_SESION" ADD CONSTRAINT "FK_ID_USUARIO_NET_SESION" FOREIGN KEY ("id_usuario") REFERENCES "NET_USUARIO_EMPRESA" ("ID_USUARIO_EMPRESA")`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "NET_SESION" DROP CONSTRAINT "FK_ID_USUARIO_NET_SESION"`);
        await queryRunner.query(`ALTER TABLE "NET_SESION" DROP CONSTRAINT "FK_ID_USUARIO_PRIV_NET_SESION"`);
        await queryRunner.query(`ALTER TABLE "NET_MOVIMIENTO_CUENTA" DROP CONSTRAINT "FK_NUM_CUENTA_NET_MOV_CUEN"`);
        await queryRunner.query(`ALTER TABLE "NET_MOVIMIENTO_CUENTA" DROP CONSTRAINT "FK_ID_TIPO_MOV_NET_MOV_CUEN"`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" DROP CONSTRAINT "FK_ID_DEDUCCION_DETDED"`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" DROP CONSTRAINT "FK_ID_DETALLE_PAGO_BENEFICIO_DETDED"`);
        await queryRunner.query(`ALTER TABLE "NET_DETALLE_DEDUCCION" DROP CONSTRAINT "FK_ID_PERSONA_DETDED"`);
        await queryRunner.query(`DROP TABLE "NET_SESION"`);
        await queryRunner.query(`DROP TABLE "NET_DETALLE_DEDUCCION"`);
    }

}
